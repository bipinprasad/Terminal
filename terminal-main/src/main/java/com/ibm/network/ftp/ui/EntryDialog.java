/************************************************************************
  This software is subject to the terms of the IBM alphaBeans with Source 
  License Agreement available at 
  www.software.ibm.com/developer/alphabeans/source/license.html.
  
  Copyright (c) 1999 IBM Corporation and others. All rights reserved. 
  
  You must accept the terms of that agreement to use this software.
*************************************************************************/
  
package com.ibm.network.ftp.ui;
/**
 * This class was generated by a SmartGuide.
 * 
 */
 class EntryDialog extends java.awt.Dialog implements java.awt.event.ActionListener, java.awt.event.WindowListener,java.awt.event.KeyListener {
	private static final long serialVersionUID = 7895106771968675312L;
	private java.awt.Button ivjcanBut = null;
    private java.awt.TextField ivjentryField = null;
    private java.awt.Label ivjentryLabel = null;
    private java.awt.Button ivjokBut = null;
    private java.awt.Panel ivjPanel1 = null;
    //private java.awt.FlowLayout ivjPanel1FlowLayout = null;
    private java.awt.Panel ivjPanel2 = null;
    //private java.awt.FlowLayout ivjPanel2FlowLayout = null;
    
    // For passing the data back to the parent
    private FTPUI myParent;
/**
 * Constructor
 * @param parent Symbol
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public EntryDialog(java.awt.Frame parent) {
    super(parent);
    initialize();
}
/**
 * EntryDialog constructor comment.
 * @param parent java.awt.Frame
 * @param title java.lang.String
 */
public EntryDialog(java.awt.Frame parent, String title) {
    super(parent, title);
    initialize();
}
/**
 * This method was created by a SmartGuide.
 * @param parent java.awt.Frame
 * @param title java.lang.String
 * @param modal boolean
 * @param newLabel java.lang.String
 */
public EntryDialog( java.awt.Frame frm, String title, FTPUI container,String newLabel) {
    super(frm, title);
    
    //Set the parent to pass the parameters to FTPUIBean
    this.myParent=container;
    
    // Modify the Label for the operation
    this.getentryLabel().setText(newLabel+":");
    
    initialize();
    
}
/**
 * EntryDialog constructor comment.
 * @param parent java.awt.Frame
 * @param title java.lang.String
 * @param modal boolean
 */
public EntryDialog(java.awt.Frame parent, String title, boolean modal) {
    super(parent, title, modal);
    initialize();
}
/**
 * EntryDialog constructor comment.
 * @param parent java.awt.Frame
 * @param modal boolean
 */
public EntryDialog(java.awt.Frame parent, boolean modal) {
    super(parent, modal);
    initialize();
}
/**
 * This method was created by a SmartGuide.
 * @param evt java.awt.event.ActionEvent
 */
public void actionPerformed(java.awt.event.ActionEvent evt) {
    
    if(evt.getSource().equals(getokBut())){
        //Pass the data String to the parent
        this.myParent.setDataString(ivjentryField.getText());
        
        //If the textfield is not empty
        //set the focus again in the dialog
        
        if (!ivjentryField.getText().equals(""))
        {
            this.dispose();
        }
        else
            this.requestFocus();    
    }
    else    
        this.dispose();
    return;
}
/**
 * conn0:  (EntryDialog.window.windowClosing(java.awt.event.WindowEvent) --> EntryDialog.dispose())
 * @param arg1 java.awt.event.WindowEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn0(java.awt.event.WindowEvent arg1) {
    try {
        // user code begin {1}
        // user code end
        this.dispose();
        // user code begin {2}
        // user code end
    } catch (java.lang.Throwable ivjExc) {
        // user code begin {3}
        // user code end
        handleException(ivjExc);
    }
}
/**
 * Return the canBut property value.
 * @return java.awt.Button
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.Button getcanBut() {
    if (ivjcanBut == null) {
        try {
            ivjcanBut = new java.awt.Button();
            ivjcanBut.setName("canBut");
            ivjcanBut.setBounds(156, 81, 59, 29);
            ivjcanBut.setLabel("Cancel");
            // user code begin {1}
            // user code end
        } catch (java.lang.Throwable ivjExc) {
            // user code begin {2}
            // user code end
            handleException(ivjExc);
        }
    };
    return ivjcanBut;
}
/**
 * Return the entryField property value.
 * @return java.awt.TextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.TextField getentryField() {
    if (ivjentryField == null) {
        try {
            ivjentryField = new java.awt.TextField();
            ivjentryField.setName("entryField");
            ivjentryField.setBackground(java.awt.Color.white);
            ivjentryField.setColumns(20);
            // user code begin {1}
            // user code end
        } catch (java.lang.Throwable ivjExc) {
            // user code begin {2}
            // user code end
            handleException(ivjExc);
        }
    };
    return ivjentryField;
}
/**
 * Return the entryLabel property value.
 * @return java.awt.Label
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.Label getentryLabel() {
    if (ivjentryLabel == null) {
        try {
            ivjentryLabel = new java.awt.Label();
            ivjentryLabel.setName("entryLabel");
            ivjentryLabel.setAlignment(java.awt.Label.CENTER);
            ivjentryLabel.setText("File Name");
            // user code begin {1}
            // user code end
        } catch (java.lang.Throwable ivjExc) {
            // user code begin {2}
            // user code end
            handleException(ivjExc);
        }
    };
    return ivjentryLabel;
}
/**
 * Return the okBut property value.
 * @return java.awt.Button
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.Button getokBut() {
    if (ivjokBut == null) {
        try {
            ivjokBut = new java.awt.Button();
            ivjokBut.setName("okBut");
            ivjokBut.setBounds(80, 81, 59, 29);
            ivjokBut.setLabel("   Ok    ");
            // user code begin {1}
            // user code end
        } catch (java.lang.Throwable ivjExc) {
            // user code begin {2}
            // user code end
            handleException(ivjExc);
        }
    };
    return ivjokBut;
}
/**
 * Return the Panel1 property value.
 * @return java.awt.Panel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.Panel getPanel1() {
    if (ivjPanel1 == null) {
        try {
            ivjPanel1 = new java.awt.Panel();
            ivjPanel1.setName("Panel1");
            ivjPanel1.setLayout(getPanel1FlowLayout());
            ivjPanel1.setBounds(4, 5, 281, 49);
            ivjPanel1.add(getentryLabel(), getentryLabel().getName());
            ivjPanel1.add(getentryField(), getentryField().getName());
            // user code begin {1}
            // user code end
        } catch (java.lang.Throwable ivjExc) {
            // user code begin {2}
            // user code end
            handleException(ivjExc);
        }
    };
    return ivjPanel1;
}
/**
 * Return the Panel1FlowLayout property value.
 * @return java.awt.FlowLayout
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.FlowLayout getPanel1FlowLayout() {
    java.awt.FlowLayout ivjPanel1FlowLayout = null;
    try {
        /* Create part */
        ivjPanel1FlowLayout = new java.awt.FlowLayout();
        ivjPanel1FlowLayout.setAlignment(1);
        ivjPanel1FlowLayout.setVgap(10);
        ivjPanel1FlowLayout.setHgap(20);
    } catch (java.lang.Throwable ivjExc) {
        handleException(ivjExc);
    };
    return ivjPanel1FlowLayout;
}
/**
 * Return the Panel2 property value.
 * @return java.awt.Panel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.Panel getPanel2() {
    if (ivjPanel2 == null) {
        try {
            ivjPanel2 = new java.awt.Panel();
            ivjPanel2.setName("Panel2");
            ivjPanel2.setLayout(getPanel2FlowLayout());
            ivjPanel2.setBounds(4, 58, 280, 39);
            ivjPanel2.add(getokBut(), getokBut().getName());
            ivjPanel2.add(getcanBut(), getcanBut().getName());
            // user code begin {1}
            // user code end
        } catch (java.lang.Throwable ivjExc) {
            // user code begin {2}
            // user code end
            handleException(ivjExc);
        }
    };
    return ivjPanel2;
}
/**
 * Return the Panel2FlowLayout property value.
 * @return java.awt.FlowLayout
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.FlowLayout getPanel2FlowLayout() {
    java.awt.FlowLayout ivjPanel2FlowLayout = null;
    try {
        /* Create part */
        ivjPanel2FlowLayout = new java.awt.FlowLayout();
        ivjPanel2FlowLayout.setVgap(10);
        ivjPanel2FlowLayout.setHgap(20);
    } catch (java.lang.Throwable ivjExc) {
        handleException(ivjExc);
    };
    return ivjPanel2FlowLayout;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {
    /* Uncomment the following lines to print uncaught exceptions to stdout */
    // System.out.println("--------- UNCAUGHT EXCEPTION ---------");
    // exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() {
    // user code begin {1}
    
    //Add ActionListeners for the OK & Cancel Button
    
    ivjokBut.addActionListener(this);
    ivjcanBut.addActionListener(this);
    
    //Add KeyListeners for Buttons and Text field
    ivjokBut.addKeyListener(this);
    ivjcanBut.addKeyListener(this);
    
    getentryField().addKeyListener(this);
    
    // user code end
    this.addWindowListener(this);
}
/**
 * Initialize class
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
    // user code begin {1}
    // user code end
    setName("EntryDialog");
    setName("EntryDialog");
    setLayout(new java.awt.GridLayout(2, 1));
    setSize(340,108);
    
    // Set the Dialog as modal & not resizable
    setModal(true);
    setResizable(false);
    
    add(getPanel1(), getPanel1().getName());
    add(getPanel2(), getPanel2().getName());
    initConnections();
    // user code begin {2}
        
    // user code end
}
  public void keyPressed(java.awt.event.KeyEvent key)
  {
        if (key.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER)
        {
            if(key.getSource().equals(getokBut()) || key.getSource().equals(getentryField())){
                //Pass the data String to the parent
                this.myParent.setDataString(ivjentryField.getText());
        
                //If the textfield is not empty
                //set the focus again in the dialog
            
                if (!ivjentryField.getText().equals(""))
                {
                    this.dispose();
                }
                else
                    this.requestFocus();
            }   
            else
                this.dispose();
        }   
        return;
  }             
  public void keyReleased(java.awt.event.KeyEvent key)
  {
  }       
  public void keyTyped(java.awt.event.KeyEvent key)
  {
  }       
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
/*
public static void main(java.lang.String[] args) {
    try {
        com.ibm.network.ftp.ui.EntryDialog aEntryDialog = new com.ibm.network.ftp.ui.EntryDialog(new java.awt.Frame());
        aEntryDialog.setModal(true);
        try {
            Class aCloserClass = Class.forName("uvm.abt.edit.WindowCloser");
            Class parmTypes[] = { java.awt.Window.class };
            Object parms[] = { aEntryDialog };
            java.lang.reflect.Constructor aCtor = aCloserClass.getConstructor(parmTypes);
            aCtor.newInstance(parms);
        } catch (java.lang.Throwable exc) {};
        aEntryDialog.setVisible(true);
    } catch (Throwable exception) {
        System.err.println("Exception occurred in main() of java.awt.Dialog");
    }
}
*/
    public void setButtonsBackground(java.awt.Color newColor)
    {
        if (newColor!=null)
        {
            //Change the Background of all buttons
            getokBut().setBackground(newColor);
            getcanBut().setBackground(newColor);
        }   
    }
    public void setButtonsForeground(java.awt.Color newColor)
    {
        if (newColor!=null)
        {
            //Change the Foreground of all buttons
            
            getokBut().setForeground(newColor);
            getcanBut().setForeground(newColor);
        }   
    }
    public void setDialogBackground(java.awt.Color newColor)
    {
        if (newColor!=null)
        {
            this.setBackground(newColor);
            
            //Set the Panels' color
            getPanel1().setBackground(newColor);
            getPanel2().setBackground(newColor);
            //Change the Background of each labels
            getentryLabel().setBackground(newColor);
        }   
    }
    public void setLabelsForeground(java.awt.Color newColor)
    {
        if (newColor!=null)
        {
            //Change the Foreground of all Labels
            getentryLabel().setForeground(newColor);
            
        }   
    }
    public void setTextBackground(java.awt.Color newColor)
    {
        if (newColor!=null)
        {
            //Change the Background of all text fields
            getentryField().setBackground(newColor);
            
        }   
    }
/**
 * Method to handle events for the WindowListener interface.
 * @param e java.awt.event.WindowEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void windowActivated(java.awt.event.WindowEvent e) {
    // user code begin {1}
    
    // Set Focus in first Text Field
    
    this.getentryField().requestFocus();
    
    // user code end
    // user code begin {2}
    // user code end
}
/**
 * Method to handle events for the WindowListener interface.
 * @param e java.awt.event.WindowEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void windowClosed(java.awt.event.WindowEvent e) {
    // user code begin {1}
    // user code end
    // user code begin {2}
    // user code end
}
/**
 * Method to handle events for the WindowListener interface.
 * @param e java.awt.event.WindowEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void windowClosing(java.awt.event.WindowEvent e) {
    // user code begin {1}
    // user code end
    if ((e.getSource() == this) ) {
        conn0(e);
    }
    // user code begin {2}
    // user code end
}
/**
 * Method to handle events for the WindowListener interface.
 * @param e java.awt.event.WindowEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void windowDeactivated(java.awt.event.WindowEvent e) {
    // user code begin {1}
    // user code end
    // user code begin {2}
    // user code end
}
/**
 * Method to handle events for the WindowListener interface.
 * @param e java.awt.event.WindowEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void windowDeiconified(java.awt.event.WindowEvent e) {
    // user code begin {1}
    // user code end
    // user code begin {2}
    // user code end
}
/**
 * Method to handle events for the WindowListener interface.
 * @param e java.awt.event.WindowEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void windowIconified(java.awt.event.WindowEvent e) {
    // user code begin {1}
    // user code end
    // user code begin {2}
    // user code end
}
/**
 * Method to handle events for the WindowListener interface.
 * @param e java.awt.event.WindowEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void windowOpened(java.awt.event.WindowEvent e) {
    // user code begin {1}
    // user code end
    // user code begin {2}
    // user code end
}
}
