/************************************************************************
  This software is subject to the terms of the IBM alphaBeans with Source 
  License Agreement available at 
  www.software.ibm.com/developer/alphabeans/source/license.html.
  
  Copyright (c) 1999 IBM Corporation and others. All rights reserved. 
  
  You must accept the terms of that agreement to use this software.
 *************************************************************************/

package com.ibm.network.ftp.ui;

/**
 * This class was generated by a SmartGuide.
 * 
 */
class ConnectDialog extends java.awt.Dialog implements
		java.awt.event.ActionListener, java.awt.event.WindowListener,
		java.awt.event.KeyListener {
	private static final long serialVersionUID = 6025668991798997028L;
	private java.awt.Button ivjcanBut = null;
	//private java.awt.GridLayout ivjConnectDialogGridLayout = null;
	private java.awt.Label ivjlabAccount = null;
	private java.awt.Label ivjlabHostName = null;
	private java.awt.Label ivjlabPassword = null;
	private java.awt.Label ivjlabUseName = null;
	private java.awt.Button ivjokBut = null;
	private java.awt.Panel ivjPanel11 = null;
	//private java.awt.FlowLayout ivjPanel11FlowLayout = null;
	private java.awt.Panel ivjPanel21 = null;
	//private java.awt.FlowLayout ivjPanel21FlowLayout = null;
	private java.awt.Panel ivjPanel32 = null;
	//private java.awt.FlowLayout ivjPanel32FlowLayout = null;
	private java.awt.Panel ivjPanel41 = null;
	//private java.awt.FlowLayout ivjPanel41FlowLayout = null;
	private java.awt.Panel ivjPanel5 = null;
	//private java.awt.FlowLayout ivjPanel5FlowLayout = null;
	private java.awt.TextField ivjtexAccount = null;
	private java.awt.TextField ivjtexHostName = null;
	private java.awt.TextField ivjtexPassword = null;
	private java.awt.TextField ivjtexUserName = null;

	// For passing the connection parameter to the parent
	FTPUI myParent;

	/**
	 * Constructor
	 * 
	 * @param parent
	 *            Symbol
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	public ConnectDialog(java.awt.Frame parent) {
		super(parent);
		initialize();
	}

	// This constructor is invoked from the FTPUI Bean
	// Parameters are a Frame since Dialog has to be come
	// from a Frame and
	// the FTPUIBean for calling parent's method

	ConnectDialog(java.awt.Frame par, FTPUI caller) {
		super(par, "Connect", true);
		this.myParent = caller;
		initialize();
	}

	/**
	 * ConnectDialog constructor comment.
	 * 
	 * @param parent
	 *            java.awt.Frame
	 * @param title
	 *            java.lang.String
	 */
	public ConnectDialog(java.awt.Frame parent, String title) {
		super(parent, title);
		initialize();
	}

	/**
	 * ConnectDialog constructor comment.
	 * 
	 * @param parent
	 *            java.awt.Frame
	 * @param title
	 *            java.lang.String
	 * @param modal
	 *            boolean
	 */
	public ConnectDialog(java.awt.Frame parent, String title, boolean modal) {
		super(parent, title, modal);
		initialize();
	}

	/**
	 * ConnectDialog constructor comment.
	 * 
	 * @param parent
	 *            java.awt.Frame
	 * @param modal
	 *            boolean
	 */
	public ConnectDialog(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		initialize();
	}

	/**
	 * actionPerformed method comment.
	 */
	@Override
	public void actionPerformed(java.awt.event.ActionEvent e) {
		// Ok button pressed
		if (e.getSource().equals(getokBut())) {
			String hostName = gettexHostName().getText();
			String userName = gettexUserName().getText();
			String password = gettexPassword().getText();
			String account = gettexAccount().getText();

			this.dispose();
			myParent.messageConnectDialog(hostName, userName, password, account);

		}
		// Cancel button pressed
		else if (e.getSource().equals(getcanBut())) {
			this.dispose();
		}
	}

	/**
	 * conn0: (ConnectDialog.window.windowClosing(java.awt.event.WindowEvent)
	 * --> ConnectDialog.dispose())
	 * 
	 * @param arg1
	 *            java.awt.event.WindowEvent
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private void conn0(java.awt.event.WindowEvent arg1) {
		try {
			// user code begin {1}
			// user code end
			this.dispose();
			// user code begin {2}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {3}
			// user code end
			handleException(ivjExc);
		}
	}

	/**
	 * Return the canBut property value.
	 * 
	 * @return java.awt.Button
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private java.awt.Button getcanBut() {
		if (ivjcanBut == null) {
			try {
				ivjcanBut = new java.awt.Button();
				ivjcanBut.setName("canBut");
				ivjcanBut.setLabel("Cancel");
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		;
		return ivjcanBut;
	}

	/**
	 * Return the ConnectDialogGridLayout property value.
	 * 
	 * @return java.awt.GridLayout
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private java.awt.GridLayout getConnectDialogGridLayout() {
		java.awt.GridLayout ivjConnectDialogGridLayout = null;
		try {
			/* Create part */
			ivjConnectDialogGridLayout = new java.awt.GridLayout(5, 1);
			ivjConnectDialogGridLayout.setHgap(2);
		} catch (java.lang.Throwable ivjExc) {
			handleException(ivjExc);
		}
		;
		return ivjConnectDialogGridLayout;
	}

	/**
	 * Return the labAccount property value.
	 * 
	 * @return java.awt.Label
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private java.awt.Label getlabAccount() {
		if (ivjlabAccount == null) {
			try {
				ivjlabAccount = new java.awt.Label();
				ivjlabAccount.setName("labAccount");
				ivjlabAccount.setAlignment(java.awt.Label.LEFT);
				ivjlabAccount.setText("Account:  ");
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		;
		return ivjlabAccount;
	}

	/**
	 * Return the labHostName property value.
	 * 
	 * @return java.awt.Label
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private java.awt.Label getlabHostName() {
		if (ivjlabHostName == null) {
			try {
				ivjlabHostName = new java.awt.Label();
				ivjlabHostName.setName("labHostName");
				ivjlabHostName.setAlignment(java.awt.Label.LEFT);
				ivjlabHostName.setText("Host Name:");
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		;
		return ivjlabHostName;
	}

	/**
	 * Return the labPassword property value.
	 * 
	 * @return java.awt.Label
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private java.awt.Label getlabPassword() {
		if (ivjlabPassword == null) {
			try {
				ivjlabPassword = new java.awt.Label();
				ivjlabPassword.setName("labPassword");
				ivjlabPassword.setAlignment(java.awt.Label.LEFT);
				ivjlabPassword.setText("Password:");
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		;
		return ivjlabPassword;
	}

	/**
	 * Return the labUseName property value.
	 * 
	 * @return java.awt.Label
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private java.awt.Label getlabUseName() {
		if (ivjlabUseName == null) {
			try {
				ivjlabUseName = new java.awt.Label();
				ivjlabUseName.setName("labUseName");
				ivjlabUseName.setAlignment(java.awt.Label.LEFT);
				ivjlabUseName.setText("User Name:");
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		;
		return ivjlabUseName;
	}

	/**
	 * Return the okBut property value.
	 * 
	 * @return java.awt.Button
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private java.awt.Button getokBut() {
		if (ivjokBut == null) {
			try {
				ivjokBut = new java.awt.Button();
				ivjokBut.setName("okBut");
				ivjokBut.setLabel("    Ok    ");
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		;
		return ivjokBut;
	}

	/**
	 * Return the Panel11 property value.
	 * 
	 * @return java.awt.Panel
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private java.awt.Panel getPanel11() {
		if (ivjPanel11 == null) {
			try {
				ivjPanel11 = new java.awt.Panel();
				ivjPanel11.setName("Panel11");
				ivjPanel11.setLayout(getPanel11FlowLayout());
				ivjPanel11.add(getlabHostName(), getlabHostName().getName());
				ivjPanel11.add(gettexHostName(), gettexHostName().getName());
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		;
		return ivjPanel11;
	}

	/**
	 * Return the Panel11FlowLayout property value.
	 * 
	 * @return java.awt.FlowLayout
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private java.awt.FlowLayout getPanel11FlowLayout() {
		java.awt.FlowLayout ivjPanel11FlowLayout = null;
		try {
			/* Create part */
			ivjPanel11FlowLayout = new java.awt.FlowLayout();
			ivjPanel11FlowLayout.setVgap(10);
			ivjPanel11FlowLayout.setHgap(20);
		} catch (java.lang.Throwable ivjExc) {
			handleException(ivjExc);
		}
		;
		return ivjPanel11FlowLayout;
	}

	/**
	 * Return the Panel21 property value.
	 * 
	 * @return java.awt.Panel
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private java.awt.Panel getPanel21() {
		if (ivjPanel21 == null) {
			try {
				ivjPanel21 = new java.awt.Panel();
				ivjPanel21.setName("Panel21");
				ivjPanel21.setLayout(getPanel21FlowLayout());
				ivjPanel21.add(getlabUseName(), getlabUseName().getName());
				ivjPanel21.add(gettexUserName(), gettexUserName().getName());
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		;
		return ivjPanel21;
	}

	/**
	 * Return the Panel21FlowLayout property value.
	 * 
	 * @return java.awt.FlowLayout
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private java.awt.FlowLayout getPanel21FlowLayout() {
		java.awt.FlowLayout ivjPanel21FlowLayout = null;
		try {
			/* Create part */
			ivjPanel21FlowLayout = new java.awt.FlowLayout();
			ivjPanel21FlowLayout.setVgap(10);
			ivjPanel21FlowLayout.setHgap(20);
		} catch (java.lang.Throwable ivjExc) {
			handleException(ivjExc);
		}
		;
		return ivjPanel21FlowLayout;
	}

	/**
	 * Return the Panel32 property value.
	 * 
	 * @return java.awt.Panel
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private java.awt.Panel getPanel32() {
		if (ivjPanel32 == null) {
			try {
				ivjPanel32 = new java.awt.Panel();
				ivjPanel32.setName("Panel32");
				ivjPanel32.setLayout(getPanel32FlowLayout());
				ivjPanel32.add(getlabPassword(), getlabPassword().getName());
				ivjPanel32.add(gettexPassword(), gettexPassword().getName());
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		;
		return ivjPanel32;
	}

	/**
	 * Return the Panel32FlowLayout property value.
	 * 
	 * @return java.awt.FlowLayout
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private java.awt.FlowLayout getPanel32FlowLayout() {
		java.awt.FlowLayout ivjPanel32FlowLayout = null;
		try {
			/* Create part */
			ivjPanel32FlowLayout = new java.awt.FlowLayout();
			ivjPanel32FlowLayout.setVgap(10);
			ivjPanel32FlowLayout.setHgap(27);
		} catch (java.lang.Throwable ivjExc) {
			handleException(ivjExc);
		}
		;
		return ivjPanel32FlowLayout;
	}

	/**
	 * Return the Panel41 property value.
	 * 
	 * @return java.awt.Panel
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private java.awt.Panel getPanel41() {
		if (ivjPanel41 == null) {
			try {
				ivjPanel41 = new java.awt.Panel();
				ivjPanel41.setName("Panel41");
				ivjPanel41.setLayout(getPanel41FlowLayout());
				ivjPanel41.add(getlabAccount(), getlabAccount().getName());
				ivjPanel41.add(gettexAccount(), gettexAccount().getName());
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		;
		return ivjPanel41;
	}

	/**
	 * Return the Panel41FlowLayout property value.
	 * 
	 * @return java.awt.FlowLayout
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private java.awt.FlowLayout getPanel41FlowLayout() {
		java.awt.FlowLayout ivjPanel41FlowLayout = null;
		try {
			/* Create part */
			ivjPanel41FlowLayout = new java.awt.FlowLayout();
			ivjPanel41FlowLayout.setVgap(10);
			ivjPanel41FlowLayout.setHgap(28);
		} catch (java.lang.Throwable ivjExc) {
			handleException(ivjExc);
		}
		;
		return ivjPanel41FlowLayout;
	}

	/**
	 * Return the Panel5 property value.
	 * 
	 * @return java.awt.Panel
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private java.awt.Panel getPanel5() {
		if (ivjPanel5 == null) {
			try {
				ivjPanel5 = new java.awt.Panel();
				ivjPanel5.setName("Panel5");
				ivjPanel5.setLayout(getPanel5FlowLayout());
				ivjPanel5.add(getokBut(), getokBut().getName());
				ivjPanel5.add(getcanBut(), getcanBut().getName());
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		;
		return ivjPanel5;
	}

	/**
	 * Return the Panel5FlowLayout property value.
	 * 
	 * @return java.awt.FlowLayout
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private java.awt.FlowLayout getPanel5FlowLayout() {
		java.awt.FlowLayout ivjPanel5FlowLayout = null;
		try {
			/* Create part */
			ivjPanel5FlowLayout = new java.awt.FlowLayout();
			ivjPanel5FlowLayout.setVgap(15);
			ivjPanel5FlowLayout.setHgap(20);
		} catch (java.lang.Throwable ivjExc) {
			handleException(ivjExc);
		}
		;
		return ivjPanel5FlowLayout;
	}

	/**
	 * This method was created by a SmartGuide.
	 * 
	 * @return java.awt.Dimension
	 */
	@Override
	public java.awt.Dimension getPreferredSize() {
		return new java.awt.Dimension(getPanel5().getPreferredSize().width, 100);
	}

	/**
	 * Return the texAccount property value.
	 * 
	 * @return java.awt.TextField
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private java.awt.TextField gettexAccount() {
		if (ivjtexAccount == null) {
			try {
				ivjtexAccount = new java.awt.TextField();
				ivjtexAccount.setName("texAccount");
				ivjtexAccount.setEchoChar('*');
				ivjtexAccount.setBackground(java.awt.Color.white);
				ivjtexAccount.setColumns(20);
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		;
		return ivjtexAccount;
	}

	/**
	 * Return the texHostName property value.
	 * 
	 * @return java.awt.TextField
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private java.awt.TextField gettexHostName() {
		if (ivjtexHostName == null) {
			try {
				ivjtexHostName = new java.awt.TextField();
				ivjtexHostName.setName("texHostName");
				ivjtexHostName.setBackground(java.awt.Color.white);
				ivjtexHostName.setColumns(20);
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		;
		return ivjtexHostName;
	}

	/**
	 * Return the texPassword property value.
	 * 
	 * @return java.awt.TextField
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private java.awt.TextField gettexPassword() {
		if (ivjtexPassword == null) {
			try {
				ivjtexPassword = new java.awt.TextField();
				ivjtexPassword.setName("texPassword");
				ivjtexPassword.setEchoChar('*');
				ivjtexPassword.setBackground(java.awt.Color.white);
				ivjtexPassword.setColumns(20);
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		;
		return ivjtexPassword;
	}

	/**
	 * Return the texUserName property value.
	 * 
	 * @return java.awt.TextField
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private java.awt.TextField gettexUserName() {
		if (ivjtexUserName == null) {
			try {
				ivjtexUserName = new java.awt.TextField();
				ivjtexUserName.setName("texUserName");
				ivjtexUserName.setBackground(java.awt.Color.white);
				ivjtexUserName.setColumns(20);
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		;
		return ivjtexUserName;
	}

	/**
	 * Called whenever the part throws an exception.
	 * 
	 * @param exception
	 *            java.lang.Throwable
	 */
	private void handleException(Throwable exception) {
		/* Uncomment the following lines to print uncaught exceptions to stdout */
		// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
		// exception.printStackTrace(System.out);
	}

	/**
	 * Initializes connections
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private void initConnections() {
		// user code begin {1}

		// Add ActionListeners for OK & Cancel Buttons

		ivjokBut.addActionListener(this);
		ivjcanBut.addActionListener(this);

		// Add ActionListeners for buttons and
		// HostName,Password and Account Textfields
		ivjokBut.addKeyListener(this);
		ivjcanBut.addKeyListener(this);
		gettexHostName().addKeyListener(this);
		gettexUserName().addKeyListener(this);
		gettexPassword().addKeyListener(this);
		gettexAccount().addKeyListener(this);

		// user code end
		this.addWindowListener(this);
	}

	/**
	 * Initialize class
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private void initialize() {
		// user code begin {1}
		// user code end
		setName("ConnectDialog");
		setTitle("Connection Details");
		setLayout(getConnectDialogGridLayout());
		setSize(320, 241);

		// Set the Dialog title,modal and set as not resizable
		setTitle("Connect Dialog");
		setModal(true);
		setResizable(false);

		add(getPanel11(), getPanel11().getName());
		add(getPanel21(), getPanel21().getName());
		add(getPanel32(), getPanel32().getName());
		add(getPanel41(), getPanel41().getName());
		add(getPanel5(), getPanel5().getName());
		initConnections();
		// user code begin {2}
		// user code end
	}

	@Override
	public void keyPressed(java.awt.event.KeyEvent key) {
		if (key.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
			if (key.getSource().equals(getokBut())
					|| key.getSource().equals(gettexHostName())
					|| key.getSource().equals(gettexPassword())
					|| key.getSource().equals(gettexAccount())
					|| key.getSource().equals(gettexUserName())) {
				String hostName = gettexHostName().getText();
				String userName = gettexUserName().getText();
				String password = gettexPassword().getText();
				String account = gettexAccount().getText();
				this.dispose();
				myParent.messageConnectDialog(hostName, userName, password,
						account);
			}
			// Cancel button pressed
			else if (key.getSource().equals(getcanBut())) {
				this.dispose();
			}
		}
		return;
	}

	@Override
	public void keyReleased(java.awt.event.KeyEvent key) {
	}

	@Override
	public void keyTyped(java.awt.event.KeyEvent key) {
	}

	/**
	 * main entrypoint - starts the part when it is run as an application
	 * 
	 * @param args
	 *            java.lang.String[]
	 */
	/*
	 * public static void main(java.lang.String[] args) { try {
	 * com.ibm.network.ftp.ui.ConnectDialog aConnectDialog = new
	 * com.ibm.network.ftp.ui.ConnectDialog(new java.awt.Frame());
	 * aConnectDialog.setModal(true); try { Class aCloserClass =
	 * Class.forName("uvm.abt.edit.WindowCloser"); Class parmTypes[] = {
	 * java.awt.Window.class }; Object parms[] = { aConnectDialog };
	 * java.lang.reflect.Constructor aCtor =
	 * aCloserClass.getConstructor(parmTypes); aCtor.newInstance(parms); } catch
	 * (java.lang.Throwable exc) {}; aConnectDialog.setVisible(true); } catch
	 * (Throwable exception) {
	 * System.err.println("Exception occurred in main() of java.awt.Dialog"); }
	 * }
	 */
	public void setButtonsBackground(java.awt.Color newColor) {
		if (newColor != null) {
			// Change the Background of all buttons
			getokBut().setBackground(newColor);
			getcanBut().setBackground(newColor);
		}
	}

	public void setButtonsForeground(java.awt.Color newColor) {
		if (newColor != null) {
			// Change the Foreground of all buttons
			getokBut().setForeground(newColor);
			getcanBut().setForeground(newColor);
		}
	}

	public void setDialogBackground(java.awt.Color newColor) {
		if (newColor != null) {
			this.setBackground(newColor);
			// Set panels' Background
			getPanel11().setBackground(newColor);
			getPanel21().setBackground(newColor);
			getPanel32().setBackground(newColor);
			getPanel41().setBackground(newColor);
			getPanel5().setBackground(newColor);

			// Change the Background of each labels
			getlabHostName().setBackground(newColor);
			getlabUseName().setBackground(newColor);
			getlabPassword().setBackground(newColor);
			getlabAccount().setBackground(newColor);
		}
	}

	public void setLabelsForeground(java.awt.Color newColor) {
		if (newColor != null) {
			// Change the Foreground of all Labels
			getlabHostName().setForeground(newColor);
			getlabUseName().setForeground(newColor);
			getlabPassword().setForeground(newColor);
			getlabAccount().setForeground(newColor);
		}
	}

	public void setTextBackground(java.awt.Color newColor) {
		if (newColor != null) {
			// Change the Background of all text fields
			gettexHostName().setBackground(newColor);
			gettexUserName().setBackground(newColor);
			gettexPassword().setBackground(newColor);
			gettexAccount().setBackground(newColor);
		}
	}

	/**
	 * Method to handle events for the WindowListener interface.
	 * 
	 * @param e
	 *            java.awt.event.WindowEvent
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	@Override
	public void windowActivated(java.awt.event.WindowEvent e) {
		// user code begin {1}

		// Set Focus in first Text Field

		this.gettexHostName().requestFocus();

		// user code end
		// user code begin {2}
		// user code end
	}

	/**
	 * Method to handle events for the WindowListener interface.
	 * 
	 * @param e
	 *            java.awt.event.WindowEvent
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	@Override
	public void windowClosed(java.awt.event.WindowEvent e) {
		// user code begin {1}
		// user code end
		// user code begin {2}
		// user code end
	}

	/**
	 * Method to handle events for the WindowListener interface.
	 * 
	 * @param e
	 *            java.awt.event.WindowEvent
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	@Override
	public void windowClosing(java.awt.event.WindowEvent e) {
		// user code begin {1}
		// user code end
		if ((e.getSource() == this)) {
			conn0(e);
		}
		// user code begin {2}
		// user code end
	}

	/**
	 * Method to handle events for the WindowListener interface.
	 * 
	 * @param e
	 *            java.awt.event.WindowEvent
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	@Override
	public void windowDeactivated(java.awt.event.WindowEvent e) {
		// user code begin {1}
		// user code end
		// user code begin {2}
		// user code end
	}

	/**
	 * Method to handle events for the WindowListener interface.
	 * 
	 * @param e
	 *            java.awt.event.WindowEvent
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	@Override
	public void windowDeiconified(java.awt.event.WindowEvent e) {
		// user code begin {1}
		// user code end
		// user code begin {2}
		// user code end
	}

	/**
	 * Method to handle events for the WindowListener interface.
	 * 
	 * @param e
	 *            java.awt.event.WindowEvent
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	@Override
	public void windowIconified(java.awt.event.WindowEvent e) {
		// user code begin {1}
		// user code end
		// user code begin {2}
		// user code end
	}

	/**
	 * Method to handle events for the WindowListener interface.
	 * 
	 * @param e
	 *            java.awt.event.WindowEvent
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	@Override
	public void windowOpened(java.awt.event.WindowEvent e) {
		// user code begin {1}
		// user code end
		// user code begin {2}
		// user code end
	}
}
